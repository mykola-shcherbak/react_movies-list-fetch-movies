{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","findMovieByTitle","a","fetch","then","response","json","FindMovie","addMovie","useState","titleValue","setTitleValue","setMovie","isMovieFounded","setIsMovieFounded","getMovie","data","Title","Plot","Poster","imdbID","Response","htmlFor","type","id","placeholder","value","onChange","event","target","test","onClick","App","state","newMovie","some","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2aabf35b.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=e3692833';\n\nexport const findMovieByTitle = async title => fetch(`${URL}&t=${title}`)\n  .then(response => response.json());\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\nimport { findMovieByTitle } from '../../api/api';\n\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [titleValue, setTitleValue] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [isMovieFounded, setIsMovieFounded] = useState(true);\n\n  const addFindedMovie = () => {\n    addMovie(movie);\n    setMovie(null);\n  };\n\n  const getMovie = async() => {\n    const data = await findMovieByTitle(titleValue);\n\n    const { Title, Plot, Poster, imdbID, Response } = data;\n\n    if (Response === 'False') {\n      setIsMovieFounded(false);\n      setTitleValue('');\n      setMovie(null);\n\n      return;\n    }\n\n    setMovie({\n      title: Title,\n      description: Plot,\n      imgUrl: Poster,\n      imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n      imdbId: imdbID,\n    });\n    setTitleValue('');\n    setIsMovieFounded(true);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={titleValue}\n              onChange={event => setTitleValue(event.target.value)}\n            />\n          </div>\n          {/[А-Я-Ё]/gi.test(titleValue)\n            ? (\n              <p className=\"help is-danger\">\n                English only\n              </p>\n            ) : !isMovieFounded && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n            )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => getMovie()}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => addFindedMovie()}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && (<MovieCard {...movie} />)}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (newMovie) => {\n    if (newMovie !== null\n      && !this.state.movies.some(movie => movie.imdbId === newMovie.imdbId)) {\n      this.setState(state => ({\n        movies: [...state.movies, newMovie],\n      }));\n    }\n  }\n\n  render() {\n    const { movies } = this.state;\n    const { addMovie } = this;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}